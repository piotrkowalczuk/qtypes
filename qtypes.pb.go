// Code generated by protoc-gen-go.
// source: qtypes.proto
// DO NOT EDIT!

/*
Package qtypes is a generated protocol buffer package.

It is generated from these files:
	qtypes.proto

It has these top-level messages:
	String
	Int64
	Float64
	Timestamp
*/
package qtypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryType int32

const (
	QueryType_NULL             QueryType = 0
	QueryType_EQUAL            QueryType = 1
	QueryType_GREATER          QueryType = 2
	QueryType_GREATER_EQUAL    QueryType = 3
	QueryType_LESS             QueryType = 4
	QueryType_LESS_EQUAL       QueryType = 5
	QueryType_IN               QueryType = 6
	QueryType_BETWEEN          QueryType = 7
	QueryType_HAS_PREFIX       QueryType = 8
	QueryType_HAS_SUFFIX       QueryType = 9
	QueryType_SUBSTRING        QueryType = 10
	QueryType_PATTERN          QueryType = 11
	QueryType_MIN_LENGTH       QueryType = 12
	QueryType_MAX_LENGTH       QueryType = 13
	QueryType_OVERLAP          QueryType = 14
	QueryType_CONTAINS         QueryType = 15
	QueryType_IS_CONTAINED_BY  QueryType = 16
	QueryType_HAS_ELEMENT      QueryType = 17
	QueryType_HAS_ANY_ELEMENT  QueryType = 18
	QueryType_HAS_ALL_ELEMENTS QueryType = 19
)

var QueryType_name = map[int32]string{
	0:  "NULL",
	1:  "EQUAL",
	2:  "GREATER",
	3:  "GREATER_EQUAL",
	4:  "LESS",
	5:  "LESS_EQUAL",
	6:  "IN",
	7:  "BETWEEN",
	8:  "HAS_PREFIX",
	9:  "HAS_SUFFIX",
	10: "SUBSTRING",
	11: "PATTERN",
	12: "MIN_LENGTH",
	13: "MAX_LENGTH",
	14: "OVERLAP",
	15: "CONTAINS",
	16: "IS_CONTAINED_BY",
	17: "HAS_ELEMENT",
	18: "HAS_ANY_ELEMENT",
	19: "HAS_ALL_ELEMENTS",
}
var QueryType_value = map[string]int32{
	"NULL":             0,
	"EQUAL":            1,
	"GREATER":          2,
	"GREATER_EQUAL":    3,
	"LESS":             4,
	"LESS_EQUAL":       5,
	"IN":               6,
	"BETWEEN":          7,
	"HAS_PREFIX":       8,
	"HAS_SUFFIX":       9,
	"SUBSTRING":        10,
	"PATTERN":          11,
	"MIN_LENGTH":       12,
	"MAX_LENGTH":       13,
	"OVERLAP":          14,
	"CONTAINS":         15,
	"IS_CONTAINED_BY":  16,
	"HAS_ELEMENT":      17,
	"HAS_ANY_ELEMENT":  18,
	"HAS_ALL_ELEMENTS": 19,
}

func (x QueryType) String() string {
	return proto.EnumName(QueryType_name, int32(x))
}
func (QueryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// String ...
type String struct {
	Values      []string  `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Valid       bool      `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Negation    bool      `protobuf:"varint,3,opt,name=negation" json:"negation,omitempty"`
	Type        QueryType `protobuf:"varint,4,opt,name=type,enum=qtypes.QueryType" json:"type,omitempty"`
	Insensitive bool      `protobuf:"varint,5,opt,name=insensitive" json:"insensitive,omitempty"`
}

func (m *String) Reset()                    { *m = String{} }
func (m *String) String() string            { return proto.CompactTextString(m) }
func (*String) ProtoMessage()               {}
func (*String) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Int64 ...
type Int64 struct {
	Values   []int64   `protobuf:"varint,1,rep,name=values" json:"values,omitempty"`
	Valid    bool      `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Negation bool      `protobuf:"varint,3,opt,name=negation" json:"negation,omitempty"`
	Type     QueryType `protobuf:"varint,4,opt,name=type,enum=qtypes.QueryType" json:"type,omitempty"`
}

func (m *Int64) Reset()                    { *m = Int64{} }
func (m *Int64) String() string            { return proto.CompactTextString(m) }
func (*Int64) ProtoMessage()               {}
func (*Int64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Float64 ...
type Float64 struct {
	Values   []float64 `protobuf:"fixed64,1,rep,name=values" json:"values,omitempty"`
	Valid    bool      `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Negation bool      `protobuf:"varint,3,opt,name=negation" json:"negation,omitempty"`
	Type     QueryType `protobuf:"varint,4,opt,name=type,enum=qtypes.QueryType" json:"type,omitempty"`
}

func (m *Float64) Reset()                    { *m = Float64{} }
func (m *Float64) String() string            { return proto.CompactTextString(m) }
func (*Float64) ProtoMessage()               {}
func (*Float64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Timestamp ...
type Timestamp struct {
	Values   []*google_protobuf.Timestamp `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Valid    bool                         `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Negation bool                         `protobuf:"varint,3,opt,name=negation" json:"negation,omitempty"`
	Type     QueryType                    `protobuf:"varint,4,opt,name=type,enum=qtypes.QueryType" json:"type,omitempty"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Timestamp) GetValues() []*google_protobuf.Timestamp {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*String)(nil), "qtypes.String")
	proto.RegisterType((*Int64)(nil), "qtypes.Int64")
	proto.RegisterType((*Float64)(nil), "qtypes.Float64")
	proto.RegisterType((*Timestamp)(nil), "qtypes.Timestamp")
	proto.RegisterEnum("qtypes.QueryType", QueryType_name, QueryType_value)
}

func init() { proto.RegisterFile("qtypes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x93, 0x5d, 0x8f, 0x9a, 0x4e,
	0x14, 0xc6, 0xff, 0xa8, 0x20, 0x1c, 0x7c, 0x19, 0x67, 0x37, 0xff, 0x10, 0xaf, 0x8c, 0x49, 0x13,
	0xd3, 0x0b, 0x4c, 0x6c, 0xd3, 0x9b, 0x5e, 0x61, 0x3b, 0xba, 0x24, 0xec, 0xac, 0xcb, 0x8c, 0xed,
	0x6e, 0x6f, 0x08, 0xb6, 0x94, 0x92, 0x20, 0x50, 0x41, 0x53, 0xfb, 0x49, 0x9a, 0xf4, 0x83, 0xf4,
	0xeb, 0x35, 0x83, 0x60, 0xdf, 0xae, 0xbd, 0x9b, 0xdf, 0x73, 0x9e, 0x73, 0x9e, 0x93, 0x9c, 0x0c,
	0x74, 0x3e, 0x17, 0xc7, 0x2c, 0xc8, 0xcd, 0x6c, 0x97, 0x16, 0x29, 0x56, 0x4e, 0x34, 0x7c, 0x19,
	0x46, 0xc5, 0xa7, 0xfd, 0xc6, 0x7c, 0x9f, 0x6e, 0xa7, 0x61, 0x1a, 0xfb, 0x49, 0x38, 0x2d, 0x0d,
	0x9b, 0xfd, 0xc7, 0x69, 0x56, 0x5a, 0xa6, 0x45, 0xb4, 0x0d, 0xf2, 0xc2, 0xdf, 0x66, 0xbf, 0x5e,
	0xa7, 0x21, 0xe3, 0xef, 0x12, 0x28, 0xac, 0xd8, 0x45, 0x49, 0x88, 0xff, 0x07, 0xe5, 0xe0, 0xc7,
	0xfb, 0x20, 0x37, 0xa4, 0x51, 0x73, 0xa2, 0xb9, 0x15, 0xe1, 0x6b, 0x90, 0x0f, 0x7e, 0x1c, 0x7d,
	0x30, 0x1a, 0x23, 0x69, 0xa2, 0xba, 0x27, 0xc0, 0x43, 0x50, 0x93, 0x20, 0xf4, 0x8b, 0x28, 0x4d,
	0x8c, 0x66, 0x59, 0x38, 0x33, 0x7e, 0x02, 0x2d, 0x91, 0x6b, 0xb4, 0x46, 0xd2, 0xa4, 0x37, 0x1b,
	0x98, 0xd5, 0xda, 0xf7, 0xfb, 0x60, 0x77, 0xe4, 0xc7, 0x2c, 0x70, 0xcb, 0x32, 0x1e, 0x81, 0x1e,
	0x25, 0x79, 0x90, 0xe4, 0x51, 0x11, 0x1d, 0x02, 0x43, 0x2e, 0xa7, 0xfc, 0x2e, 0x8d, 0xbf, 0x80,
	0x6c, 0x27, 0xc5, 0x8b, 0xe7, 0x7f, 0xed, 0xd6, 0xbc, 0xf8, 0x6e, 0xe3, 0xaf, 0xd0, 0x5e, 0xc4,
	0xa9, 0xff, 0x6f, 0xb6, 0x74, 0xf9, 0xec, 0x6f, 0x12, 0x68, 0xbc, 0xbe, 0x13, 0x9e, 0xfd, 0x11,
	0xaf, 0xcf, 0x86, 0x66, 0x98, 0xa6, 0x61, 0x1c, 0x98, 0xf5, 0x91, 0xcd, 0xb3, 0xf7, 0xe2, 0xab,
	0x3d, 0xfd, 0xd1, 0x00, 0xed, 0xac, 0x61, 0x15, 0x5a, 0x74, 0xed, 0x38, 0xe8, 0x3f, 0xac, 0x81,
	0x4c, 0xee, 0xd7, 0x96, 0x83, 0x24, 0xac, 0x43, 0x7b, 0xe9, 0x12, 0x8b, 0x13, 0x17, 0x35, 0xf0,
	0x00, 0xba, 0x15, 0x78, 0xa7, 0x7a, 0x53, 0x34, 0x39, 0x84, 0x31, 0xd4, 0xc2, 0x3d, 0x00, 0xf1,
	0xaa, 0x2a, 0x32, 0x56, 0xa0, 0x61, 0x53, 0xa4, 0x88, 0x09, 0x73, 0xc2, 0xdf, 0x12, 0x42, 0x51,
	0x5b, 0x98, 0x6e, 0x2c, 0xe6, 0xad, 0x5c, 0xb2, 0xb0, 0x1f, 0x90, 0x5a, 0x33, 0x5b, 0x2f, 0x04,
	0x6b, 0xb8, 0x0b, 0x1a, 0x5b, 0xcf, 0x19, 0x77, 0x6d, 0xba, 0x44, 0x20, 0x7a, 0x57, 0x16, 0xe7,
	0xc4, 0xa5, 0x48, 0x17, 0xde, 0x5b, 0x9b, 0x7a, 0x0e, 0xa1, 0x4b, 0x7e, 0x83, 0x3a, 0x25, 0x5b,
	0x0f, 0x35, 0x77, 0x85, 0xf9, 0xee, 0x0d, 0x71, 0x1d, 0x6b, 0x85, 0x7a, 0xb8, 0x03, 0xea, 0xab,
	0x3b, 0xca, 0x2d, 0x9b, 0x32, 0xd4, 0xc7, 0x57, 0xd0, 0xb7, 0x99, 0x57, 0x09, 0xe4, 0xb5, 0x37,
	0x7f, 0x44, 0x08, 0xf7, 0x41, 0x17, 0xd9, 0xc4, 0x21, 0xb7, 0x84, 0x72, 0x34, 0x10, 0x2e, 0x21,
	0x58, 0xf4, 0xf1, 0x2c, 0x62, 0x7c, 0x0d, 0xa8, 0x14, 0x1d, 0xa7, 0x16, 0x19, 0xba, 0x9a, 0xab,
	0xef, 0xaa, 0xff, 0xba, 0x51, 0xca, 0xc3, 0x3d, 0xfb, 0x19, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x14,
	0x2d, 0x01, 0xce, 0x03, 0x00, 0x00,
}
